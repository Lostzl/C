/*
 * Author Lucas V.
 *
 */

#include<stdio.h>
#include<stdlib.h>

typedef struct elemento
{
    int val;
    struct elemento* prox;
} Elemento;

Elemento* Lista;

int imprime_lista(Elemento* lista);
Elemento* adiciona_elemento_inicio(Elemento* lista, int val);
Elemento* adiciona_elemento_final(Elemento* lista, int val);

int main()
{
    Elemento* lista;
    lista = NULL;

    lista = adiciona_elemento_final(lista, 1);
    lista = adiciona_elemento_final(lista, 2);
    // lista = adiciona_elemento_final(lista, 3);
    // lista = adiciona_elemento_final(lista, 4);

    imprime_lista(lista);


    system("pause");
    return 0;
}

int imprime_lista(Elemento* lista)
{
    Elemento* p;
    p = lista;

    if(p==NULL)
    {
        printf("\nNAO HA ELEMENTOS NA LISTA\n\n");
        return 0;
    }
    do
    {
        printf("\nVAL: %d\n\n", p->val);
        p = p->prox;

    }
    while(p != NULL);
    return 1;
}

Elemento* adiciona_elemento_inicio(Elemento* lista, int val)
{
    Elemento* novo = (Elemento*) malloc(sizeof(Elemento));

    if(lista == NULL)
    {
        novo->val = val;
        novo->prox = NULL;
        return novo;
    }
    else
    {
        novo->val = val;
        novo->prox=lista;
        return novo;
    }

}

Elemento* adiciona_elemento_final(Elemento* lista, int val)
{
    Elemento* novo = (Elemento*) malloc(sizeof(Elemento));
    Elemento* p;
    p = lista;
    novo->val = val;

    if(lista == NULL)
    {
        novo->prox = NULL;
        return novo;
    }
    else
    {
        while(p!=NULL)
        {
            p = p->prox;
        }

        if(p==NULL)
        {
            novo->prox = NULL;
            p = novo;
            return lista; //RETORNANDO LISTA
        }

    }

}
