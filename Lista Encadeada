/*
 * Author Lucas V.
 *
 */

#include<stdio.h>
#include<stdlib.h>

struct elemento
{
    int info;
    struct elemento* prox;
};

typedef struct elemento Elemento;


Elemento* lista_cria()
{
    return NULL;
};

//REALIZA A INSERCAO DE ELEMENTOS NO INICIO DA LISTA.
int lista_insere(Elemento** lista, int val)
{
    if(lista == NULL)
    {
        return 0;
    }

    Elemento* novo = (Elemento*) malloc(sizeof(Elemento));

    if(novo == NULL)    //Verifica se a alocação de memoria para um novo elemento foi possível;
    {
        return 0;
    }
    novo->info = val;
    if(*lista == NULL)
    {
        novo->prox = NULL;
        *lista = novo;
    }
    else
    {
        novo->prox = *lista;
        *lista = novo;
    }

    return 1;
}

int lista_imprime(Elemento* lista)
{
    Elemento* p;

    p = lista;

    if(p == NULL) //Verifica se há elementos na lista;
    {
        return 0;
    }
    else
    {
        do
        {
            printf("%d ", p->info);
            p = p->prox;

        }
        while(p != NULL); //Caso tenha elementos, enquando ainda tiver eu imprimo a var "info".

    }
    printf("\n");
    return 1;
}

int main()
{
    Elemento *topo;
    topo = lista_cria();

    lista_insere(&topo, 1);
    lista_insere(&topo, 2);
    lista_insere(&topo, 3);

    lista_imprime(topo);

    printf("\n");
    system("pause");
    return 0;
}
