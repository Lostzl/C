#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#define SORTEIO 10



/*void ordena(int qnt, int *A){
    int i, j, NUM, aux;
    NUM = qnt;

for(j = (NUM - 1); j >= 0; j--){
    for(i=0; i<=(j-1); i++)
    {
      if(A[i] > A[i+1])
      {
        aux=A[i];
        A[i]=A[i+1];
        A[i+1]=aux;
      }
    }
  }
printf("VALORES ORDENADOS:\n");
for(i = 0; i <= (NUM - 1); i++){
    printf("- %d -\n", A[i]);
}

}

*/
int main(){

int NUM = 60;   // NUM tem que receber a quantidade de POSIÇÕES do vetor.
int FAIXA = 59; //Faixa de 0 - X valores DISTINTOS que se deseja.
srand(time (NULL));
int A[NUM - 1];
int B[60];
int C[60];
int i, j, valor, aux, k, p;

for(i = 0; i <= (NUM - 1); i++){
    A[i] = 0;
    }
for(i = 0; i < 60; i++){
    B[i] = 0;
    }
for(i = 0; i < 60; i++){
    C[i] = i+1;
    }

for (k=0; k<SORTEIO; k++){
    for(i = 0; i < NUM; i++){
        valor = rand()%FAIXA;
            A[i] = valor;
                for(j = 0; j < NUM; j++){
                    if((A[j] == A[i]) && (i != j)){  //i != 1 para que nao se utilize o i.
                        A[i] = (rand()%FAIXA) + 1;
                            j = -1;
                        }
                    }
        p= A[i];
        B[p] += 1;
        }
}


printf("VALORES SORTEADOS:\n");
for(i = 0; i <= (NUM - 1); i++){
    printf("%d - ", B[i]);
}
printf("\n\n");
//ordena(NUM, A);

/*Ordenação com método de Troca (Bubble Sort, ou Método de Flutuação / Bolha)
Ordena de par em par*/

/*for(j = (NUM - 1); j >= 0; j--){
    for(i=0; i<=(j-1); i++)
    {
      if(A[i] > A[i+1])
      {
        aux=A[i];
        A[i]=A[i+1];
        A[i+1]=aux;
      }
    }
  }
printf("VALORES ORDENADOS:\n");
for(i = 0; i <= (NUM - 1); i++){
    printf("- %d -\n", A[i]);
}
*/
system("pause");
return 0;
}
